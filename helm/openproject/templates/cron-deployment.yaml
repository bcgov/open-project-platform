---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-cron
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    openproject/process: cron
spec:
  replicas: {{ if .Values.cron.enabled }}{{- 1 }}{{ else }}{{- 0 }}{{ end }}
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      openproject/process: cron
  template:
    metadata:
      annotations:
        {{- range $key, $val := .Values.podAnnotations }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        {{- include "openproject.envChecksums" . | nindent 8 }}
        checksum/env-cron-environment: {{ include (print $.Template.BasePath "/secret_cron_environment.yaml") $ | sha256sum }}
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        openproject/process: cron
    spec:
      {{- include "openproject.imagePullSecrets" . | indent 6 }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- include "openproject.podSecurityContext" . | indent 6 }}
      serviceAccountName: {{ include "common.names.fullname" . }}
      volumes:
        {{- include "openproject.tmpVolumeSpec" . | indent 8 }}
        {{- if .Values.egress.tls.rootCA.fileName }}
        - name: ca-pemstore
          configMap:
            name: "{{- .Values.egress.tls.rootCA.configMap }}"
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: "data"
          persistentVolumeClaim:
            claimName: {{ include "common.names.fullname" . }}
        {{- end }}
        {{- include "openproject.extraVolumes" . | indent 8 }}
      initContainers:
        - name: wait-for-db
          {{- include "openproject.containerSecurityContext" . | indent 10 }}
          image: {{ include "openproject.image" . }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          envFrom:
            {{- include "openproject.envFrom" . | nindent 12 }}
            - secretRef:
                name: {{ include "common.names.fullname" . }}-cron-environment
          env:
            {{- include "openproject.env" . | nindent 12 }}
            - name: TMPDIR
              value: /tmp/app
          command: ["sh", "-c"]
          args:
            - |
              # Create a subdirectory that your non-root user will own
              echo "Creating user-owned temporary directory /tmp/app..."
              mkdir -p /tmp/app || { echo "Failed to create /tmp/app!"; exit 1; }
              echo "Setting permissions on /tmp/app to 700..."
              chmod 700 /tmp/app || { echo "Failed to set permissions on /tmp/app!"; exit 1; }
              
              # Now, run the original wait-for-db script
              echo "Running original wait-for-db script..."
              /app/docker/prod/wait-for-db
          resources:
            {{- toYaml .Values.appInit.resources | nindent 12 }}
          volumeMounts:
            {{- include "openproject.tmpVolumeMounts" . | indent 12 }}
      containers:
        - name: "cron"
          {{- include "openproject.containerSecurityContext" . | indent 10 }}
          image: {{ include "openproject.image" . }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          envFrom:
            {{- include "openproject.envFrom" . | nindent 12 }}
            - secretRef:
                name: {{ include "common.names.fullname" . }}-cron-environment
          args:
            - bash
            - /app/docker/prod/cron
          env:
            {{- include "openproject.env" . | nindent 12 }}
            - name: TMPDIR
              value: /tmp/app
          volumeMounts:
            {{- include "openproject.tmpVolumeMounts" . | indent 12 }}
            {{- if .Values.persistence.enabled }}
            - name: "data"
              mountPath: "/var/openproject/assets"
            {{- end }}
            {{- if .Values.egress.tls.rootCA.fileName }}
            - name: ca-pemstore
              mountPath: /etc/ssl/certs/custom-ca.pem
              subPath: {{ .Values.egress.tls.rootCA.fileName }}
              readOnly: false
            {{- end }}
            {{- include "openproject.extraVolumeMounts" . | indent 12 }}
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1"
